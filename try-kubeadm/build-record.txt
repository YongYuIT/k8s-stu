####install docker
$ sudo yum install -y docker
####if too slow, change to ali yum source
$ cd /etc/yum.repos.d/
$ sudo mv CentOS-Base.repo CentOS-Base.repo.back20190222001
$ sudo wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
$ sudo yum clean all
$ sudo yum makecache
$ sudo yum update
$ sudo yum install -y docker
$ sudo systemctl start docker
$ sudo docker version
Client:
 Version:         1.13.1
 API version:     1.26
 Package version: docker-1.13.1-91.git07f3374.el7.centos.x86_64
 Go version:      go1.10.3
 Git commit:      07f3374/1.13.1
 Built:           Wed Feb 13 17:10:12 2019
 OS/Arch:         linux/amd64

Server:
 Version:         1.13.1
 API version:     1.26 (minimum version 1.12)
 Package version: docker-1.13.1-91.git07f3374.el7.centos.x86_64
 Go version:      go1.10.3
 Git commit:      07f3374/1.13.1
 Built:           Wed Feb 13 17:10:12 2019
 OS/Arch:         linux/amd64
 Experimental:    false

####install kubelet kubeadm kubectl
$ sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
No package kubelet available.
No package kubeadm available.
No package kubectl available.
####add yum config to repo, ref to https://kubernetes.io/zh/docs/setup/independent/install-kubeadm/#%E5%AE%89%E8%A3%85-kubeadm-kubelet-%E5%92%8C-kubectl
$ sudo gedit /etc/yum.repos.d/kubernetes.repo ####add config to kubernetes.repo
####if to slow,try ali yum source of kubeadm, ref to https://www.jianshu.com/p/4b5f960a5bea
$ sudo setenforce 0
$ sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
$ sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
$ sudo systemctl start kubelet

####init master
$ sudo kubeadm init --kubernetes-version=v1.13.0 --pod-network-cidr=10.244.0.0/16
[ERROR Swap]: running with swap on is not supported. Please disable swap
$ sudo swapoff -a
$ sudo kubeadm init --kubernetes-version=v1.13.0 --pod-network-cidr=10.244.0.0/16
[ERROR ImagePull]: failed to pull image k8s.gcr.io/kube-apiserver:v1.13.0
[ERROR ImagePull]: failed to pull image k8s.gcr.io/kube-controller-manager:v1.13.0
[ERROR ImagePull]: failed to pull image k8s.gcr.io/kube-scheduler:v1.13.0
[ERROR ImagePull]: failed to pull image k8s.gcr.io/kube-proxy:v1.13.0
[ERROR ImagePull]: failed to pull image k8s.gcr.io/pause:3.1
[ERROR ImagePull]: failed to pull image k8s.gcr.io/etcd:3.2.24
[ERROR ImagePull]: failed to pull image k8s.gcr.io/coredns:1.2.6
####search imgs on https://hub.docker.com/, ref to https://blog.csdn.net/jinguangliu/article/details/82792617
$ sudo docker pull mirrorgooglecontainers/kube-apiserver:v1.13.0
$ sudo docker pull mirrorgooglecontainers/kube-controller-manager:v1.13.0
$ sudo docker pull mirrorgooglecontainers/kube-scheduler:v1.13.0
$ sudo docker pull mirrorgooglecontainers/kube-proxy:v1.13.0
$ sudo docker pull mirrorgooglecontainers/pause:3.1
$ sudo docker pull mirrorgooglecontainers/etcd:3.2.24
$ sudo docker pull mirrorgooglecontainers/coredns:1.2.6
$ sudo docker images
REPOSITORY                                          TAG                 IMAGE ID            CREATED             SIZE
docker.io/mirrorgooglecontainers/kube-proxy                v1.13.0             8fa56d18961f        2 months ago        80.2 MB
docker.io/mirrorgooglecontainers/kube-controller-manager   v1.13.0             d82530ead066        2 months ago        146 MB
docker.io/mirrorgooglecontainers/kube-scheduler            v1.13.0             9508b7d8008d        2 months ago        79.6 MB
docker.io/mirrorgooglecontainers/kube-apiserver            v1.13.0             f1ff9b7e3d6e        2 months ago        181 MB
docker.io/mirrorgooglecontainers/coredns                   1.2.6               f59dcacceff4        3 months ago        40 MB
docker.io/mirrorgooglecontainers/etcd                      3.2.24              3cab8e1b9802        5 months ago        220 MB
docker.io/mirrorgooglecontainers/pause                     3.1                 da86e6ba6ca1        14 months ago       742 kB
$ sudo docker tag 8fa56d18961f k8s.gcr.io/kube-proxy:v1.13.0
$ sudo docker tag d82530ead066 k8s.gcr.io/kube-controller-manager:v1.13.0
$ sudo docker tag 9508b7d8008d k8s.gcr.io/kube-scheduler:v1.13.0
$ sudo docker tag f1ff9b7e3d6e k8s.gcr.io/kube-apiserver:v1.13.0
$ sudo docker tag f59dcacceff4 k8s.gcr.io/coredns:1.2.6
$ sudo docker tag 3cab8e1b9802 k8s.gcr.io/etcd:3.2.24
$ sudo docker tag da86e6ba6ca1 k8s.gcr.io/pause:3.1
$ sudo docker images
REPOSITORY                                          TAG                 IMAGE ID            CREATED             SIZE
k8s.gcr.io/kube-proxy                               v1.13.0             8fa56d18961f        2 months ago        80.2 MB
k8s.gcr.io/kube-scheduler                           v1.13.0             9508b7d8008d        2 months ago        79.6 MB
k8s.gcr.io/kube-apiserver                           v1.13.0             f1ff9b7e3d6e        2 months ago        181 MB
k8s.gcr.io/kube-controller-manager                  v1.13.0             d82530ead066        2 months ago        146 MB
k8s.gcr.io/coredns                                  1.2.6               f59dcacceff4        3 months ago        40 MB
k8s.gcr.io/etcd                                     3.2.24              3cab8e1b9802        5 months ago        220 MB
k8s.gcr.io/pause                                    3.1                 da86e6ba6ca1        14 months ago       742 kB
$ sudo kubeadm init --kubernetes-version=v1.13.0 --pod-network-cidr=10.244.0.0/16
Your Kubernetes master has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of machines by running the following on each node
as root:

  kubeadm join 192.168.186.141:6443 --token qxvyyv.llfc48p3bhvtdn1i --discovery-token-ca-cert-hash sha256:2bc67c4cc6cddb534a15a7bfd1f4bf5229778ab9a4bf8619a5b016af30d318d8

####run master
$ mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
$ kubectl get node
NAME                    STATUS     ROLES    AGE     VERSION
localhost.localdomain   NotReady   master   4m37s   v1.13.3
####apply add on, ref to https://www.cnblogs.com/qwangxiao/p/9397983.html
$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
$ kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml
$ kubectl get node
NAME                    STATUS     ROLES    AGE     VERSION
localhost.localdomain   NotReady   master   4m37s   v1.13.3

####open 6443 and 10250 on master machine
####open 6443 and 10250 on node machine
####run node on an other machine
####install docker kubelet kubeadm, start docker and kubelet
$ sudo kubeadm join 192.168.186.141:6443 --token qxvyyv.llfc48p3bhvtdn1i --discovery-token-ca-cert-hash sha256:2bc67c4cc6cddb534a15a7bfd1f4bf5229778ab9a4bf8619a5b016af30d318d8
[ERROR Swap]: running with swap on is not supported.
$ sudo swapoff -a
$ sudo kubeadm join 192.168.186.141:6443 --token qxvyyv.llfc48p3bhvtdn1i --discovery-token-ca-cert-hash sha256:2bc67c4cc6cddb534a15a7bfd1f4bf5229778ab9a4bf8619a5b016af30d318d8
This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the master to see this node join the cluster.

####on master
$ kubectl get nodes

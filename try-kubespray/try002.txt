参考
https://www.cnblogs.com/ltxdzh/p/10113194.html

master：192.168.186.158
node：192.168.186.157
配置SSH
master：
$ sudo ssh-keygen
$ sudo ssh-copy-id -i /root/.ssh/id_rsa.pub root@192.168.186.157
$ sudo ssh-copy-id -i /root/.ssh/id_rsa.pub root@0.0.0.0
测试
masert：
$ sudo ssh root@192.168.186.157
$ sudo ssh root@0.0.0.0

安装kubespray
$ sudo yum -y install epel-release
$ sudo yum clean all && sudo yum makecache
$ sudo yum install -y python-pip python34 python-netaddr python34-pip ansible git
$ git clone https://github.com/kubernetes-sigs/kubespray
$ cd kubespray
$ sudo pip install -r requirements.txt

关闭防火墙，禁止SELinux
$ sudo sed -i 's/SELINUX=*/SELINUX=disabled/' /etc/selinux/config
$ sudo systemctl disable firewalld && sudo systemctl stop firewalld

生成inventory文件
$ cp -r inventory/sample inventory/testcluster
$ declare -a IPS=(192.168.186.158 192.168.186.157)
$ CONFIG_FILE=inventory/testcluster/hosts.ini python3 contrib/inventory_builder/inventory.py ${IPS[@]}
如果报错ImportError: No module named 'ruamel'
$ sudo pip3 install ruamel.yaml
$ sudo pip3 install --upgrade pip
再试，还是不行就手动改写inventory/testcluster/hosts.ini文件
$ rm -rf kubespray
$ git clone https://github.com/kubernetes-sigs/kubespray
$ cd kubespray
$ cp -r inventory/sample inventory/testcluster
$ gedit inventory/testcluster/hosts.ini

创建集群
$ ansible-playbook -i inventory/testcluster/hosts.ini cluster.yml -t download -b -v -k

fatal: [node2]: FAILED! => {"attempts": 4, "changed": false, "cmd": "/usr/bin/docker pull gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.3.0", "msg": "[Errno 2] No such file or directory", "rc": 2}
fatal: [node1]: FAILED! => {"attempts": 4, "changed": false, "cmd": "/usr/bin/docker pull gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.3.0", "msg": "[Errno 2] No such file or directory", "rc": 2}

安装docker
$ sudo yum install yum-utils device-mapper-persistent-data lvm2
$ sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
$ sudo yum update
$ sudo yum install docker-ce-18.06.2.ce
$ sudo mkdir /etc/docker
$ sudo gedit /etc/docker/daemon.json #这段配置存疑
########内容
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
$ sudo mkdir -p /etc/systemd/system/docker.service.d
$ sudo systemctl daemon-reload
$ sudo systemctl restart docker

再试
$ ansible-playbook -i inventory/testcluster/hosts.ini cluster.yml -t download -b -v -k

fatal: [node2]: FAILED! => {"attempts": 4, "changed": true, "cmd": ["/usr/bin/docker", "pull", "gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.3.0"], "delta": "0:00:15.112126", "end": "2019-03-04 02:49:20.470453", "msg": "non-zero return code", "rc": 1, "start": "2019-03-04 02:49:05.358327", "stderr": "Error response from daemon: Get https://gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)", "stderr_lines": ["Error response from daemon: Get https://gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)"], "stdout": "", "stdout_lines": []}
fatal: [node1]: FAILED! => {"attempts": 4, "changed": true, "cmd": ["/usr/bin/docker", "pull", "gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.3.0"], "delta": "0:00:15.134109", "end": "2019-03-04 02:49:30.364034", "msg": "non-zero return code", "rc": 1, "start": "2019-03-04 02:49:15.229925", "stderr": "Error response from daemon: Get https://gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)", "stderr_lines": ["Error response from daemon: Get https://gcr.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)"], "stdout": "", "stdout_lines": []}

在两台机器上分别手动pull镜像
$ sudo docker pull mirrorgooglecontainers/cluster-proportional-autoscaler-amd64:1.3.0
$ sudo docker tag mirrorgooglecontainers/cluster-proportional-autoscaler-amd64:1.3.0 gcr.io/google_containers/cluster-proportional-autoscaler-amd64:1.3.0
如果嫌这种方法麻烦，可以修改配置文件（推荐这种方法）
$ gedit inventory/testcluster/group_vars/k8s-cluster/k8s-cluster.yml
#kube_image_repo: "gcr.io/google-containers"
kube_image_repo: "mirrorgooglecontainers"
$ gedit roles/download/defaults/main.yml
找到cluster-proportional-autoscaler，改过来
其他的镜像也一样处理

fatal: [node2]: FAILED! => {"attempts": 4, "changed": false, "dest": "/tmp/releases/hyperkube", "msg": "Request failed: <urlopen error [Errno 101] Network is unreachable>", "state": "absent", "url": "https://storage.googleapis.com/kubernetes-release/release/v1.13.3/bin/linux/amd64/hyperkube"}
fatal: [node1]: FAILED! => {"attempts": 4, "changed": false, "dest": "/tmp/releases/hyperkube", "msg": "Request failed: <urlopen error [Errno 101] Network is unreachable>", "state": "absent", "url": "https://storage.googleapis.com/kubernetes-release/release/v1.13.3/bin/linux/amd64/hyperkube"}

搭建ftp服务器
$ sudo yum install vsftpd -y
$ sudo service vsftpd start
$ netstat -nltp | grep 21
$ sudo gedit /etc/vsftpd/vsftpd.conf
$ anonymous_enable=YES #是否允许匿名登陆
$ sudo service vsftpd restart #pub目录在/var/ftp/pub
$ sudo chown yong:yong /var/ftp/pub

修改inventory/testcluster/group_vars/k8s-cluster/k8s-cluster.yml中kube_image_repo、kube_service_addresses和kube_pods_subnet的值
$ gedit inventory/testcluster/group_vars/k8s-cluster/k8s-cluster.yml
修改inventory/testcluster/group_vars/k8s-cluster/k8s-cluster，启用dashboard、heml、local_volume_provisioner、cephfs_provisioner、ingress_nginx和cert_manager
$ gedit inventory/testcluster/group_vars/k8s-cluster/addons.yml

included: /home/yong/kubespray/roles/download/tasks/kubeadm_images.yml for node1, node2
fatal: [node2]: FAILED! => {"changed": false, "checksum": "5c5bead0b7b7a1559adb7e3c87b8feb6296099b0", "msg": "Destination directory /etc/kubernetes does not exist"}
fatal: [node1]: FAILED! => {"changed": false, "checksum": "5c5bead0b7b7a1559adb7e3c87b8feb6296099b0", "msg": "Destination directory /etc/kubernetes does not exist"}

安装kubeadm（所有节点）
$ sudo gedit /etc/yum.repos.d/kubernetes.repo ####上阿里云源 
$ sudo setenforce 0
$ sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
$ sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
$ sudo systemctl enable --now kubelet

$ sudo cat /etc/sysctl.d/k8s.conf
cat: /etc/sysctl.d/k8s.conf: No such file or directory
$ sudo gedit /etc/sysctl.d/k8s.conf
########内容
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
$ sudo sysctl --system

启动集群
$ ansible all -i inventory/testcluster/hosts.ini -m command -a 'swapoff -a' -u root -k #所有节点关闭交换分区
$ ansible-playbook -i inventory/testcluster/hosts.ini cluster.yml -b -v -k

"assertion": "groups.etcd|length is not divisibleby 2"
改inventory/testcluster/hosts.ini，使etcd节点数量不可以被2整除

[download : container_download | download images for kubeadm config images]
{"changed": true, "cmd": ["/usr/local/bin/kubeadm", "config", "images", "pull", "--config=/etc/kubernetes/kubeadm-images.yaml"], "delta": "0:00:22.405934", "end": "2019-03-04 05:35:20.876420", "msg": "non-zero return code", "rc": 1, "start": "2019-03-04 05:34:58.470486", "stderr": "failed to pull image \"mirrorgooglecontainers/coredns:1.2.6\": output: Error response from daemon: pull access denied for mirrorgooglecontainers/coredns, repository does not exist or may require 'docker login'\n, error: exit status 1", "stderr_lines": ["failed to pull image \"mirrorgooglecontainers/coredns:1.2.6\": output: Error response from daemon: pull access denied for mirrorgooglecontainers/coredns, repository does not exist or may require 'docker login'", ", error: exit status 1"], "stdout": "[config/images] Pulled mirrorgooglecontainers/kube-apiserver:v1.13.3\n[config/images] Pulled mirrorgooglecontainers/kube-controller-manager:v1.13.3\n[config/images] Pulled mirrorgooglecontainers/kube-scheduler:v1.13.3\n[config/images] Pulled mirrorgooglecontainers/kube-proxy:v1.13.3\n[config/images] Pulled mirrorgooglecontainers/pause:3.1", "stdout_lines": ["[config/images] Pulled mirrorgooglecontainers/kube-apiserver:v1.13.3", "[config/images] Pulled mirrorgooglecontainers/kube-controller-manager:v1.13.3", "[config/images] Pulled mirrorgooglecontainers/kube-scheduler:v1.13.3", "[config/images] Pulled mirrorgooglecontainers/kube-proxy:v1.13.3", "[config/images] Pulled mirrorgooglecontainers/pause:3.1"]}
通过自建dockerhub解决

验证
$ mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config